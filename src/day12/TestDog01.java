package day12;

public class TestDog01 {
    public static void main(String[] args) {
        //Dog dog = new Dog("str");
        //调用普通方法
        //dog.getNume();
        //dog.Dog();//报错了，不能像普通方法那样被调用
        //Dog dog;//没有new对象就不会调用，new对象时就会被调用

        /**
         * 如果在Dog类中 构造的是无参数的构造方法，这里newDog没有问题
         * 如果在Dog类中 构造的是有参数的构造方法，这里newDog就有问题
         * 为什么呢？
         * 因为如果没有创建，系统会默认创建一个无参数的构造方法，newDog()无参数不会报错
         * 但如果你创建了一个有参数的构造方法，默认的无参数构造方法系统就不会给你默认创建
         * 那你new Dog（）自然会报错，因为没有无参数的构造方法
         */

        /**
         *-——————————————————————————————————————————————————————————————————
         * 测试一下 this的用法
         */
        Dog dog = new Dog("蛋皮", 98, 99, "吉娃娃");
        System.out.println(dog.name);
        System.out.println(dog.health);
        /**
         * ————————————————————————————————————————————————————————————
         * 如果没有加this,且传递值变量名和类中变量名一致，那么就是原来类中定义的值，传递的值并没有传递过去
         * 如果名字不一致，可以传递
         */
    }

}
